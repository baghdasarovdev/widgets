name: Build Docker Image

on:
  push:
    branches: [main]
  release:
    types: [published]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Clean up old logs and temporary files to prevent space issues
      - name: Clean up logs and temp files
        run: |
          sudo rm -rf /home/runner/runners/*/_diag/*
          sudo rm -rf /tmp/*

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract branch name
        if: github.event_name == 'push'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/g')" >> $GITHUB_ENV

      - name: Extract GIT_SHA_SHORT
        if: github.event_name == 'push'
        shell: bash
        run: echo "GIT_SHA_SHORT=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_ENV

      - name: Set Docker tag based on trigger
        shell: bash
        run: |
          if [[ ${{ github.event_name }} == 'push' ]]; then
            echo "DOCKER_TAG=${{ env.BRANCH_NAME }}-${{ env.GIT_SHA_SHORT }}" >> $GITHUB_ENV
          elif [[ ${{ github.event_name }} == 'release' ]]; then
            echo "DOCKER_TAG=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
          fi

      - name: Create .npmrc file
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.TOKEN }}" > .npmrc
          FILE=./.npmrc
          if [ -f "$FILE" ]; then
            echo "DONE. $FILE exists."
          else 
              echo "FAILED. $FILE does not exist."
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/channel-manager-ui:${{ env.DOCKER_TAG }}
            ghcr.io/${{ github.repository }}/channel-manager-ui:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
